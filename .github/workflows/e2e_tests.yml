name: E2E Tests

on:
  deployment_status:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        browser: [chromium, "Mobile Safari"]
      fail-fast: false
    defaults:
      run:
        working-directory: "frontend/packages/e2e"
    env:
      CI: true
      URL: ${{ github.event.deployment_status.target_url }}
      ENVIRONMENT: ${{ github.event.deployment.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.deployment.sha }}

      - name: Check deployment conditions
        id: check
        shell: ruby {0}
        working-directory: ${{ github.workspace }}
        run: |
          event_name      = ENV.fetch("GITHUB_EVENT_NAME", '')
          event_state     = ENV.fetch("GITHUB_EVENT_DEPLOYMENT_STATUS_STATE", '')
          environment_val = ENV.fetch("GITHUB_EVENT_DEPLOYMENT_ENVIRONMENT", '')
          target_url      = ENV.fetch("GITHUB_EVENT_DEPLOYMENT_STATUS_TARGET_URL", '')

          result =
            if event_name == "deployment_status" && event_state == "success"
              # Production deployment
              if (environment_val.include?("Production") && target_url.include?("liam-app-git-main"))
                "should_run=true"
              # Preview deployment
              elsif environment_val.include?("Preview") && !target_url.include?("liam-erd-sample") && !target_url.include?("liam-docs")
                "should_run=true"
              else
                "should_run=false"
              end
            else
              "should_run=false"
            end

          # Same as 'echo "should_run=xxxx" >> $GITHUB_OUTPUT'
          output_file = ENV.fetch("GITHUB_OUTPUT")
          File.open(output_file, "a") do |file|
            file.puts result
          end

      - name: Setup pnpm
        if: steps.check.outputs.should_run == 'true'
        uses: ./.github/actions/pnpm-setup

      - name: Cache Playwright browsers
        if: steps.check.outputs.should_run == 'true'
        id: playwright-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml', '**/playwright.config.ts') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        if: ${{ steps.check.outputs.should_run == 'true' && steps.playwright-cache.outputs.cache-hit != 'true' }}
        run: pnpm exec playwright install --with-deps

      - name: Install system dependencies for WebKit
        # Some WebKit dependencies seem to lay outside the cache and will need to be installed separately
        if: ${{ steps.check.outputs.should_run == 'true' && steps.playwright-cache.outputs.cache-hit == 'true' }}
        run: pnpm exec playwright install-deps webkit

      # This workflow is triggered for all deployments (liam-app, liam-erd-sample, liam-docs),
      # but E2E tests are executed only for liam-app deployments now.
      - name: Run e2e tests
        if: steps.check.outputs.should_run == 'true'
        run: pnpm exec playwright test --project="${{ matrix.browser }}"
        env:
          URL: ${{ env.URL }}

      # FIXME: This step is not working well. All environments seem to be Preview.
      - name: Upload test results
        if: ${{ steps.check.outputs.should_run == 'true' && failure() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-results-${{ matrix.browser }}
          path: frontend/packages/e2e/test-results/
          retention-days: 30

      - name: Slack Notification on Failure
        if: ${{ steps.check.outputs.should_run == 'true' && env.ENVIRONMENT == 'Production â€“ liam-app' && failure() }}
        uses: tokorom/action-slack-incoming-webhook@d57bf1eb618f3dae9509afefa70d5774ad3d42bf # v1.3.0
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_CLI_CI_WEBHOOK_URL }}
        with:
          text: "E2E Test Failure"
          attachments: |
            [
              {
                "color": "bad",
                "fields": [
                  {
                    "title": "Browser",
                    "value": "${{ matrix.browser }}"
                  },
                  {
                    "title": "Result",
                    "value": "failure"
                  },
                  {
                    "title": "Job URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
