name: Claude Code

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to work on'
        required: true
        type: string
      instructions:
        description: 'Additional instructions for Claude'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  claude-code:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check if user is maintainer
        id: check-maintainer
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}")
          
          if echo "$response" | grep -q '"message": "Not Found"'; then
            echo "User ${{ github.actor }} is not a maintainer of this repository"
            exit 1
          fi
          
          echo "User ${{ github.actor }} is authorized to run this workflow"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: ./.github/actions/pnpm-setup

      - name: Get issue details
        id: issue
        run: |
          issue_data=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.inputs.issue_number }}")
          
          echo "title=$(echo "$issue_data" | jq -r '.title')" >> $GITHUB_OUTPUT
          echo "body=$(echo "$issue_data" | jq -r '.body')" >> $GITHUB_OUTPUT

      - name: Run Claude Code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! command -v claude &> /dev/null; then
            npm install -g @anthropic-ai/claude-cli
          fi
          
          echo "Working on issue #${{ github.event.inputs.issue_number }}: ${{ steps.issue.outputs.title }}"
          echo "Issue description: ${{ steps.issue.outputs.body }}"
          
          if [ -n "${{ github.event.inputs.instructions }}" ]; then
            echo "Additional instructions: ${{ github.event.inputs.instructions }}"
          fi
          
          claude code \
            --issue "${{ steps.issue.outputs.title }}" \
            --description "${{ steps.issue.outputs.body }}" \
            --instructions "${{ github.event.inputs.instructions }}" \
            --auto-commit \
            --branch "claude/issue-${{ github.event.inputs.issue_number }}-$(date +%s)"

      - name: Create Pull Request
        if: success()
        run: |
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes made by Claude Code"
            exit 0
          fi
          
          gh pr create \
            --title "Claude Code: Fix issue #${{ github.event.inputs.issue_number }}" \
            --body "Automated fix for issue #${{ github.event.inputs.issue_number }} using Claude Code.

          **Issue:** ${{ steps.issue.outputs.title }}
          
          **Additional Instructions:** ${{ github.event.inputs.instructions }}
          
          **Generated by:** @${{ github.actor }}
          
          This PR was created automatically by the Claude Code workflow." \
            --draft \
            --assignee ${{ github.actor }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on issue
        if: success()
        run: |
          gh issue comment ${{ github.event.inputs.issue_number }} \
            --body "ðŸ¤– Claude Code has been triggered for this issue by @${{ github.actor }}. 
            
          A draft PR will be created if changes are made."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
